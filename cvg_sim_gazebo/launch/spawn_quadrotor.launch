<?xml version="1.0"?>
<launch>
    <arg name="model" default="$(find cvg_sim_gazebo)/urdf/quadrotor.urdf.xacro"/>
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.5"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <arg name="model_name" default="quadrotor"/>
    <arg name="namespace" default=""/>  <!-- If this is a pursuit situation, pass in the namespace -->
    <arg name="tf_prefix" default="" />

    <!-- send the robot XML to param server -->
    <param name="robot_description" command="$(find xacro)/xacro.py --inorder '$(arg model)' prefix:=$(arg model_name)" />


    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="$(anon spawn_model)" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description
                    -urdf
                    -x '$(arg x)'
                    -y '$(arg y)'
                    -z '$(arg z)'
                    -R '$(arg R)'
                    -P '$(arg P)'
                    -Y '$(arg Y)'
                    -model '$(arg model_name)'
                    --namespace='$(arg namespace)'"
    respawn="false" output="screen"/>


    <!-- start robot state publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
        <param name="tf_prefix" type="string" value="'$(arg tf_prefix)'" />
    </node>

    <node name="ground_truth_to_tf" pkg="message_to_tf" type="message_to_tf" output="screen">
        <param name="odometry_topic" value="$(arg namespace)/ground_truth/state" />
        <param name="frame_id" value="nav" />
    </node>
    <!-- node name="hector_pose_estimation" pkg="hector_pose_estimation" type="hector_pose_estimation_node" output="screen"/-->

 </launch>
